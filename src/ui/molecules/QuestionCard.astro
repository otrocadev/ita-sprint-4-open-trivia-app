---
import Option from '../atoms/Option.astro'
import { getPossibleResponses } from 'src/utils/questionUtils'
import type { TriviaResponse } from '../../types/triviaTypes'

const { question } = Astro.props as TriviaResponse

let questionData
let possibleResponses: string[] = []
let correctAnswerPosition: number = -1
let error: boolean = false

try {
  questionData = question.results?.[0]
  if (!questionData) {
    throw new Error('No question data available')
  }

  const posibleResponsesData = getPossibleResponses(questionData)
  possibleResponses = posibleResponsesData.possibleResponses
  correctAnswerPosition = posibleResponsesData.correctAnswerPosition
} catch (err) {
  error = true
  console.error('Error printing the question:', err)
}

const isAnswerCorrect = (responseIndex: number) => {
  return responseIndex === correctAnswerPosition
}
---

{
  error ? (
    <article class="flex flex-col gap-8 bg-incorrect text-white p-8 border-2 border-gray-900 rounded-2xl shadow-2xl w-full max-w-3xl m-auto">
      <h2 class="text-xl">⚠️ Oops! Something went wrong...</h2>
      <span>
        The question did not work properly, please try again or contact the
        developer if the problem persists.
      </span>
    </article>
  ) : (
    <article class="flex flex-col gap-8 bg-background-card p-8 border-2 border-gray-900 rounded-2xl shadow-2xl w-full max-w-3xl m-auto">
      <span>{questionData?.question}</span>
      <div class="flex flex-col gap-4 w-fit justify-center items-center m-auto min-w-xl">
        {possibleResponses.map((response, index) => (
          <Option isCorrect={isAnswerCorrect(index)}>{response}</Option>
        ))}
      </div>
    </article>
  )
}
